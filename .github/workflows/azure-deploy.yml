name: Deploy ARM Template

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        
      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Check if VM Exists
        id: check_vm
        run: |
          if az vm show --resource-group my-linux-vm-rg --name my-vm --query "id" --output tsv; then
            echo "IS_NEW_DEPLOYMENT=false" >> $GITHUB_ENV
          else
            echo "IS_NEW_DEPLOYMENT=true" >> $GITHUB_ENV
          fi

      - name: Generate SSH Key (Only on First Deployment)
        if: env.IS_NEW_DEPLOYMENT == 'true'
        run: |
          ssh-keygen -t rsa -b 4096 -f ~/.ssh/id_rsa -N "" -C "github-actions"
          echo "SSH_PUBLIC_KEY=$(cat ~/.ssh/id_rsa.pub)" >> $GITHUB_ENV

      - name: Save Private Key as Artifact (Only on First Deployment)
        if: env.IS_NEW_DEPLOYMENT == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: ssh-private-key
          path: ~/.ssh/id_rsa

      - name: Inject SSH Key into Parameters File (Only on First Deployment)
        if: env.IS_NEW_DEPLOYMENT == 'true'
        run: |
          jq --arg key "$SSH_PUBLIC_KEY" '.parameters.adminPasswordOrKey.value = $key' templates/azuredeploy.parameters.json > temp.json
          mv temp.json templates/azuredeploy.parameters.json

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy ARM Template
        uses: azure/arm-deploy@v1
        with:
          scope: resourcegroup
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          resourceGroupName: my-linux-vm-rg
          template: templates/azuredeploy.json
          parameters: templates/azuredeploy.parameters.json
          deploymentMode: Incremental
